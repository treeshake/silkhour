(()=>{"use strict";class e extends HTMLElement{constructor(){super(),this.onActiveFilterClick=this.onActiveFilterClick.bind(this),this.debouncedOnSubmit=debounce((e=>{this.onSubmitHandler(e)}),800);const e=this.querySelector("form");null==e||e.addEventListener("input",this.debouncedOnSubmit.bind(this));const t=this.querySelector("#FacetsWrapperDesktop");t&&t.addEventListener("keyup",onKeyUpEscape)}static setListeners(){window.addEventListener("popstate",(t=>{const r=t.state?t.state.searchParams:e.searchParamsInitial;r!==e.searchParamsPrev&&e.renderPage(r,null,!1)}))}static toggleActiveFacets(e=!0){document.querySelectorAll(".js-facet-remove").forEach((t=>{t.classList.toggle("disabled",e)}))}static renderPage(t,r,n=!0){e.searchParamsPrev=t;const i=e.getSections(),o=(document.getElementById("ProductCount"),document.getElementById("ProductCountDesktop"),document.getElementById("ProductGridContainer")),s=null==o?void 0:o.querySelector(".collection");s&&s.classList.add("loading"),i.forEach((n=>{const i=`${window.location.pathname}?section_id=${n.section}&${t}`,o=e=>e.url===i;e.filterData.some(o)?e.renderSectionFromCache(o,r):e.renderSectionFromFetch(i,r)})),n&&e.updateURLHash(t)}static renderSectionFromFetch(t,r){fetch(t).then((e=>e.text())).then((n=>{const i=n;e.filterData=[...e.filterData,{html:i,url:t}],e.renderFilters(i,r),e.renderProductGridContainer(i),e.renderProductCount(i),"function"==typeof initializeScrollAnimationTrigger&&initializeScrollAnimationTrigger(i.innerHTML)}))}static renderSectionFromCache(t,r){const n=e.filterData.find(t).html;e.renderFilters(n,r),e.renderProductGridContainer(n),e.renderProductCount(n),"function"==typeof initializeScrollAnimationTrigger&&initializeScrollAnimationTrigger(n.innerHTML)}static renderProductGridContainer(e){const t=document.getElementById("ProductGridContainer");if(t){const r=(new DOMParser).parseFromString(e,"text/html").getElementById("ProductGridContainer");r&&(t.innerHTML=r.innerHTML,t.querySelectorAll(".scroll-trigger").forEach((e=>{e.classList.add("scroll-trigger--cancel")})))}document.querySelectorAll(".custom_cllection_main .product_list").forEach((e=>{e.addEventListener("click",(function(){const t=this.closest(".product_list_main").querySelector(".product_list_content");e.classList.contains("opened")?(t.style.display="none",e.classList.remove("opened")):(t.style.display="block",e.classList.add("opened"))}))}))}static renderProductCount(e){const t=(new DOMParser).parseFromString(e,"text/html").getElementById("ProductCount"),r=t?t.innerHTML:"",n=document.getElementById("ProductCount"),i=document.getElementById("ProductCountDesktop");n&&(n.innerHTML=r,n.classList.remove("loading")),i&&(i.innerHTML=r,i.classList.remove("loading")),document.querySelectorAll(".facets-container .loading__spinner, custom-facet-filters-form .loading__spinner").forEach((e=>e.classList.add("hidden")))}static renderFilters(t,r){const n=(new DOMParser).parseFromString(t,"text/html"),i=n.querySelectorAll("#FacetFiltersForm .js-filter, #FacetFiltersFormMobile .js-filter, #FacetFiltersPillsForm .js-filter"),o=document.querySelectorAll("#FacetFiltersForm .js-filter, #FacetFiltersFormMobile .js-filter, #FacetFiltersPillsForm .js-filter");Array.from(o).forEach((e=>{Array.from(i).some((({id:t})=>e.id===t))||e.remove()}));const s=e=>{const t=r?r.target.closest(".js-filter"):void 0;return!!t&&e.id===t.id},c=Array.from(i).filter((e=>!s(e))),a=Array.from(i).find(s);if(c.forEach(((e,t)=>{if(document.getElementById(e.id)){const t=document.getElementById(e.id);t&&(t.innerHTML=e.innerHTML)}else{if(t>0){const{className:r,id:n}=c[t-1];if(e.className===r){const t=document.getElementById(n);return void(t&&t.after(e))}}if(e.parentElement){const t=document.querySelector(`#${e.parentElement.id} .js-filter`);t&&t.before(e)}}})),e.renderActiveFacets(n),e.renderAdditionalElements(n),a){const t=r.target.closest(".js-filter").id;if(t){e.renderCounts(a,r.target.closest(".js-filter")),e.renderMobileCounts(a,document.getElementById(t));const n=document.getElementById(t),i=(null==n?void 0:n.classList.contains("mobile-facets__details"))?".mobile-facets__close-button":".facets__summary",o=null==n?void 0:n.querySelector(i),s="text"===r.target.getAttribute("type");o&&!s&&o.focus()}}}static renderActiveFacets(t){[".active-facets-mobile",".active-facets-desktop"].forEach((e=>{const r=t.querySelector(e);if(!r)return;const n=document.querySelector(e);n&&(n.innerHTML=r.innerHTML)})),e.toggleActiveFacets(!1)}static renderAdditionalElements(e){var t;[".mobile-facets__open",".mobile-facets__count",".sorting"].forEach((t=>{const r=document.querySelector(t),n=e.querySelector(t);r&&n&&(r.innerHTML=n.innerHTML)}));const r=null===(t=document.getElementById("FacetFiltersFormMobile"))||void 0===t?void 0:t.closest("menu-drawer");null==r||r.bindEvents()}static renderCounts(e,t){const r=t.querySelector(".facets__summary"),n=e.querySelector(".facets__summary");n&&r&&(r.outerHTML=n.outerHTML);const i=t.querySelector(".facets__header"),o=e.querySelector(".facets__header");o&&i&&(i.outerHTML=o.outerHTML);const s=t.querySelector(".facets-wrap"),c=e.querySelector(".facets-wrap");c&&s&&(Boolean(t.querySelector("show-more-button .label-show-more.hidden"))&&c.querySelectorAll(".facets__item.hidden").forEach((e=>e.classList.replace("hidden","show-more-item"))),s.outerHTML=c.outerHTML)}static renderMobileCounts(e,t){const r=t.querySelector(".mobile-facets__list"),n=e.querySelector(".mobile-facets__list");n&&r&&(r.outerHTML=n.outerHTML)}static updateURLHash(e){history.pushState({searchParams:e},"",`${window.location.pathname}${e&&"?".concat(e)}`)}static getSections(){var e;return[{section:null===(e=document.getElementById("product-grid"))||void 0===e?void 0:e.dataset.id}]}createSearchParams(e){const t=new FormData(e);return new URLSearchParams(t).toString()}onSubmitForm(t,r){e.renderPage(t,r)}onSubmitHandler(e){e.preventDefault();const t=document.querySelectorAll("custom-facet-filters-form form");if("mobile-facets__checkbox"==e.srcElement.className){const t=this.createSearchParams(e.target.closest("form"));this.onSubmitForm(t,e)}else{const r=[],n="FacetFiltersFormMobile"===e.target.closest("form").id;t.forEach((e=>{n?"FacetFiltersFormMobile"===e.id&&r.push(this.createSearchParams(e)):"FacetSortForm"!==e.id&&"FacetFiltersForm"!==e.id&&"FacetSortDrawerForm"!==e.id||r.push(this.createSearchParams(e))})),this.onSubmitForm(r.join("&"),e)}}onActiveFilterClick(t){t.preventDefault(),e.toggleActiveFacets();const r=-1==t.currentTarget.href.indexOf("?")?"":t.currentTarget.href.slice(t.currentTarget.href.indexOf("?")+1);e.renderPage(r)}}e.filterData=[];class t extends HTMLElement{constructor(){super();const e=document.querySelectorAll('.price_rang_slider input[type="range"]'),t=e[0],r=e[1];function n(e,t="$"){return`${t}${(e/100).toLocaleString("en-US",{minimumFractionDigits:2,maximumFractionDigits:2})}`}function i(){var e,n;null===(e=document.querySelector(".facets__price .input_min"))||void 0===e||e.setAttribute("value",t.value),null===(n=document.querySelector(".facets__price .input_max"))||void 0===n||n.setAttribute("value",r.value)}t.addEventListener("input",(function(){var e,t;this.value=Math.min(this.value,r.value-10).toString(),null===(t=null===(e=this.closest(".facets__display-vertical"))||void 0===e?void 0:e.querySelector(".price_min_text"))||void 0===t||(t.innerHTML=n(100*Number(this.value))),i()})),r.addEventListener("input",(function(){var e,r;this.value=Math.max(this.value,Number(t.value)- -10).toString(),null===(r=null===(e=this.closest(".facets__display-vertical"))||void 0===e?void 0:e.querySelector(".price_max_text"))||void 0===r||(r.innerHTML=n(100*Number(this.value))),i()})),i(),this.querySelectorAll("input").forEach((e=>{e.addEventListener("change",this.onRangeChange.bind(this)),e.addEventListener("keydown",this.onKeyDown.bind(this))})),this.setMinAndMaxValues()}onRangeChange(e){this.adjustToValidValues(e.currentTarget),this.setMinAndMaxValues()}onKeyDown(e){e.metaKey||e.key.match(/[0-9]|\.|,|'| |Tab|Backspace|Enter|ArrowUp|ArrowDown|ArrowLeft|ArrowRight|Delete|Escape/)||e.preventDefault()}setMinAndMaxValues(){const e=this.querySelectorAll("input"),t=e[0],r=e[1];r.value&&t.setAttribute("data-max",r.value),t.value&&r.setAttribute("data-min",t.value),""===t.value&&r.setAttribute("data-min","0"),""===r.value&&t.setAttribute("data-max",t.getAttribute("data-max")||"")}adjustToValidValues(e){const t=Number(e.value),r=Number(e.getAttribute("data-min")),n=Number(e.getAttribute("data-max"));t<r&&(e.value=r.toString()),t>n&&(e.value=n.toString())}}class r extends HTMLElement{constructor(){super();const e=this.querySelector("a");null==e||e.setAttribute("role","button"),null==e||e.addEventListener("click",this.closeFilter.bind(this)),null==e||e.addEventListener("keyup",(e=>{e.preventDefault(),"SPACE"===e.code.toUpperCase()&&this.closeFilter(e)}))}closeFilter(e){e.preventDefault();const t=this.closest("custom-facet-filters-form")||document.querySelector("custom-facet-filters-form");t&&t.onActiveFilterClick(e)}}FacetFiltersForm.filterData=[],FacetFiltersForm.searchParamsInitial=window.location.search.slice(1),FacetFiltersForm.searchParamsPrev=window.location.search.slice(1),customElements.define("custom-facet-filters-form",e),e.setListeners(),customElements.define("custom-price-range",t),customElements.define("custom-facet-remove",r)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,